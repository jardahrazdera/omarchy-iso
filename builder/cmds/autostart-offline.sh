#!/usr/bin/env bash
set -euo pipefail

chroot_bash() {
  HOME=/home/$OMARCHY_USER \
    arch-chroot -u $OMARCHY_USER /mnt/ \
    env OMARCHY_USER_NAME="$(<user_full_name.txt)" \
    OMARCHY_USER_EMAIL="$(<user_email_address.txt)" \
    USER="$OMARCHY_USER" \
    HOME="/home/$OMARCHY_USER" \
    /bin/bash "$@"
}

catch_errors() {
  echo -e "\n\e[31mOmarchy installation failed!\e[0m"
  echo "The failing command was: \`$BASH_COMMAND\` (exit code: $?)"
  echo "Get help from the community: https://discord.gg/tXFUdasqhY"

  if [[ -n $OMARCHY_USER ]]; then
    echo "You can retry by running: bash ~/.local/share/omarchy/install.sh"
    chroot_bash
  fi
}

trap catch_errors ERR

if [[ $(tty) == "/dev/tty1" ]]; then
  # Configurator for user information, disk selection, and wifi configuration
  NETWORK_NEEDED=1 ./configurator

  # Get username from installer config for reliable error recovery
  OMARCHY_USER="$(jq -r '.users[0].username' user_credentials.json)"

  # Install using files generated by the ./configurator
  archinstall \
    --config user_configuration.json \
    --creds user_credentials.json \
    --silent

  # No need to ask for sudo during the installation (omarchy itself responsible for removing after install)
  mkdir -p /mnt/etc/sudoers.d
  cat >/mnt/etc/sudoers.d/99-omarchy-installer <<EOF
root ALL=(ALL:ALL) NOPASSWD: ALL
%wheel ALL=(ALL:ALL) NOPASSWD: ALL
$OMARCHY_USER ALL=(ALL:ALL) NOPASSWD: ALL
EOF
  chmod 440 /mnt/etc/sudoers.d/99-omarchy-installer

  # Set up offline git repositories
  echo "Setting up offline git repositories..."
  mkdir -p /mnt/var/cache/omarchy
  cp -r /var/cache/omarchy/repos /mnt/var/cache/omarchy/
  
  # Create git wrapper to use offline repos
  cat > /mnt/usr/local/bin/git-wrapper << 'WRAPPER_EOF'
#!/bin/bash
# Git wrapper that uses local repositories when available

if [ "$1" = "clone" ]; then
    # Check for asdcontrol repository
    if echo "$@" | grep -q "https://github.com/nikosdion/asdcontrol.git"; then
        if [ -d "/var/cache/omarchy/repos/asdcontrol" ]; then
            echo "Using offline asdcontrol repository..."
            TARGET="/tmp/asdcontrol"
            for arg in "$@"; do
                if [[ "$arg" != "clone" && "$arg" != "-"* && "$arg" != "https://"* ]]; then
                    TARGET="$arg"
                fi
            done
            cp -r /var/cache/omarchy/repos/asdcontrol "$TARGET"
            exit 0
        fi
    fi
    
    # Check for LazyVim starter repository
    if echo "$@" | grep -q "https://github.com/LazyVim/starter"; then
        if [ -d "/var/cache/omarchy/repos/lazyvim-starter" ]; then
            echo "Using offline LazyVim repository..."
            TARGET=""
            for arg in "$@"; do
                if [[ "$arg" != "clone" && "$arg" != "-"* && "$arg" != "https://"* ]]; then
                    TARGET="$arg"
                fi
            done
            if [ -z "$TARGET" ]; then
                TARGET="$HOME/.config/nvim"
            fi
            TARGET="${TARGET/#\~/$HOME}"
            mkdir -p "$(dirname "$TARGET")"
            cp -r /var/cache/omarchy/repos/lazyvim-starter "$TARGET"
            exit 0
        fi
    fi
fi

# Fall back to real git
/usr/bin/git.real "$@"
WRAPPER_EOF
  chmod 755 /mnt/usr/local/bin/git-wrapper
  
  # Temporarily replace git with wrapper
  mv /mnt/usr/bin/git /mnt/usr/bin/git.real
  cp /mnt/usr/local/bin/git-wrapper /mnt/usr/bin/git

  # Run Omarchy web installer
  chroot_bash -lc "wget -qO- https://omarchy.org/install-dev | bash"
  
  # Restore original git binary
  if [ -f /mnt/usr/bin/git.real ]; then
    rm /mnt/usr/bin/git
    mv /mnt/usr/bin/git.real /mnt/usr/bin/git
  fi
fi